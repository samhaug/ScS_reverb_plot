#!/home/samhaug/anaconda2/bin/python

import obspy
import numpy as np
import seispy
from scipy.signal import tukey
from obspy.taup import TauPyModel
from matplotlib import pyplot as plt
from os import listdir
from scipy.signal import correlate
from matplotlib import pylab as p

'''
This is a general tool for comparing seismograms from perturbed models to
data. The simulation directories must be delimited by underscores. The second
group of strings is a number that is checked for
'''

### Change data and simulation here.
sim_dir = '/home/samhaug/work1/ScS_reverb_sims/mineos/FJ_v3.0_h6/'
data_dir = '/home/samhaug/work1/ScS_reverb_data/20160130/'

### Include these simulations
include_list = [28,30]

def compare_plot(sts,std,ax,title):

    for idx,tr in enumerate(sts):
        ax.tick_params(axis='both', which='major', labelsize=3)
        ax.set_ylim(-1,len(sts))
        ax.set_title(title,size=7)
        ax.grid()

        ax.plot(1.5*idx+std[idx].data,alpha=0.7,color='k')
        ax.plot(1.5*idx+sts[idx].data,alpha=0.7,color='r',
                picker=True,label='sim',pickradius=15)

fig,ax_list = plt.subplots(1,len(include_list),figsize=(20,30))

osim_list = listdir(sim_dir)
osim_list.sort()

sim_list = []
for ii in osim_list:
    if int(ii.split('_')[-1][1::]) in include_list:
        sim_list.append(ii)

print sim_list
std = obspy.read(data_dir+'FJ_clean.pk')
std.sort(['station'])
std = std[::2]
std.interpolate(1)
std = seispy.data.align_on_phase(std,phase=['ScSScS'],a_min=False)

for idx,tr in enumerate(std):
    std[idx] = seispy.data.phase_window(tr,['ScSScS'],window=(-10,2050))
    std[idx].data *= 1./std[idx].data.max()

for idx,ax in enumerate(ax_list):

    model = TauPyModel(model='prem')
    model_sim = TauPyModel(model='prem_p2.5')

    sts = obspy.read(sim_dir+sim_list[idx]+'/st_T.pk')
    sts.sort(['station'])
    sts = sts[::2]
    sts.filter('bandpass',freqmax=1/25.,freqmin=1/60.)
    sts.interpolate(1)
    sts.integrate()
    sts.normalize()
    sts = seispy.data.align_on_phase(sts,phase=['ScSScS'],
                                     a_min=False)
    for idy,tr in enumerate(sts):
        sts[idy] = seispy.data.phase_window(tr,['ScSScS'],window=(-10,2050))
        sts[idy].stats.starttime = std[idy].stats.starttime
        sts[idy].stats.sac['gcarc'] = std[idy].stats.sac['gcarc']
        sts[idy].normalize()

    compare_plot(sts,std,ax,sim_list[idx])

dragh = seispy.draghandler.DragHandler()
plt.tight_layout()
plt.show()

