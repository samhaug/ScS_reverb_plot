#!/home/samhaug/anaconda2/bin/python

import numpy as np
import obspy
import seispy
from matplotlib import pyplot as plt
from subprocess import call

'''
Make figure that demostrates the effect of attenuation on first order
reverberations. Plots multiple reverberations of bottomside 660 reverberations.
'''

stream = '/home/samhaug/work1/ScS_reverb_sims/mineos/prem_FJ_okhotsk/st_T.pk'
def get_first_order(st):
    st.filter('bandpass',freqmin=1./60,freqmax=1/25.)
    st.integrate().normalize()
    #a = seispy.data.phase_window(st[10],['ScS^660ScS'],window=(-10,500))
    b = seispy.data.phase_window(st[10],['ScS^660ScSScS'],window=(0,200))
    c = seispy.data.phase_window(st[10],['ScS^660ScSScSScS'],window=(0,200))
    d = seispy.data.phase_window(st[10],['ScS^660ScSScSScSScS'],window=(0,200))
    b.normalize()
    c.normalize()
    d.normalize()

    return b,c,d

def plot_first_order(b,c,d):
    fig,ax = plt.subplots(figsize=(3,4))
    ax.spines['top'].set_visible(False)
    ax.spines['right'].set_visible(False)
    ax.spines['left'].set_visible(False)
    ax.yaxis.set_ticklabels([])
    ax.yaxis.set_ticks([])
    ax.tick_params(axis='both', which='major', labelsize=7)
    ax.xaxis.set_ticks_position('bottom')
    ax.set_ylim(-1.5,5)
    ax.set_xlim(10,175)
    ax.set_xlabel('Seconds',size=7)

    t = np.linspace(0,200,num=len(b.data))
    plt.plot(t,b.data,alpha=0.5,color='k')
    plt.plot(t,c.data,alpha=0.5,color='b')
    plt.plot(t,d.data,alpha=0.5,color='r')
    plt.plot(t,b.data+1.5,alpha=0.5,color='k')
    plt.plot(t,c.data+2.5,alpha=0.5,color='b')
    plt.plot(t,d.data+3.5,alpha=0.5,color='r')
    plt.savefig('./wavelet_attenuation.pdf')
    call('evince ./wavelet_attenuation.pdf',shell=True)

st = obspy.read(stream)
b,c,d = get_first_order(st)
plot_first_order(b,c,d)
